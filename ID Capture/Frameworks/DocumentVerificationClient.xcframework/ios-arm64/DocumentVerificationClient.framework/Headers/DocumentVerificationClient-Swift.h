#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef DOCUMENTVERIFICATIONCLIENT_SWIFT_H
#define DOCUMENTVERIFICATIONCLIENT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DocumentVerificationClient",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

/// The details about the address.
SWIFT_CLASS("_TtC26DocumentVerificationClient19AddressDetailedInfo")
@interface AddressDetailedInfo : NSObject
/// The street address portion of the United States driver license owner.
@property (nonatomic, readonly, copy) NSString * _Nullable street;
/// The postal code address portion of the United States driver license owner.
@property (nonatomic, readonly, copy) NSString * _Nullable postalCode;
/// The city address portion of the United States driver license owner.
@property (nonatomic, readonly, copy) NSString * _Nullable city;
/// The jurisdiction code address portion of the United States driver license owner.
@property (nonatomic, readonly, copy) NSString * _Nullable jurisdiction;
@end

enum CheckResult : NSInteger;
@class UIImage;

SWIFT_CLASS("_TtC26DocumentVerificationClient12AnomalyCheck")
@interface AnomalyCheck : NSObject
@property (nonatomic, readonly) enum CheckResult result;
@property (nonatomic, readonly, strong) UIImage * _Nullable heatmapImage;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DetailedCheck;

SWIFT_CLASS("_TtC26DocumentVerificationClient19BarcodeAnomalyCheck")
@interface BarcodeAnomalyCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable overall;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class BarcodeVehicleClassInfo;

/// The driver license detailed info.
SWIFT_CLASS("_TtC26DocumentVerificationClient32BarcodeDriverLicenseDetailedInfo")
@interface BarcodeDriverLicenseDetailedInfo : NSObject
/// The restrictions to driving privileges for the United States driver license owner.
@property (nonatomic, readonly, copy) NSString * _Nullable restrictions;
/// The additional privileges granted to the United States driver license owner.
@property (nonatomic, readonly, copy) NSString * _Nullable endorsements;
/// The type of vehicle the driver license owner has privilege to drive.
@property (nonatomic, readonly, copy) NSString * _Nullable vehicleClass;
/// The driver license conditions.
@property (nonatomic, readonly, copy) NSString * _Nullable conditions;
/// The additional information on vehicle class.
@property (nonatomic, readonly, copy) NSArray<BarcodeVehicleClassInfo *> * _Nullable vehicleClassesInfo;
@end

@class DateResultSimple;

SWIFT_CLASS("_TtC26DocumentVerificationClient13BarcodeResult")
@interface BarcodeResult : NSObject
/// The raw bytes contained inside barcode.
@property (nonatomic, readonly, copy) NSString * _Nullable rawDataBase64;
/// String representation of data inside barcode.
@property (nonatomic, readonly, copy) NSString * _Nullable stringData;
/// The first name of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
/// The middle name of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable middleName;
/// The last name of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
/// The full name of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable fullName;
/// The additional name information of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable additionalNameInformation;
/// The address of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable address;
/// The place of birth of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable placeOfBirth;
/// The nationality of the documet owner.
@property (nonatomic, readonly, copy) NSString * _Nullable nationality;
/// The race of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable race;
/// The religion of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable religion;
/// The profession of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable profession;
/// The marital status of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable maritalStatus;
/// The residential stauts of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable residentialStatus;
/// The employer of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable employer;
/// The sex of the document owner.
@property (nonatomic, readonly, copy) NSString * _Nullable sex;
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable dateOfBirth;
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable dateOfIssue;
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable dateOfExpiry;
/// The document number.
@property (nonatomic, readonly, copy) NSString * _Nullable documentNumber;
/// The personal identification number.
@property (nonatomic, readonly, copy) NSString * _Nullable personalIdNumber;
/// The additional number of the document.
@property (nonatomic, readonly, copy) NSString * _Nullable documentAdditionalNumber;
/// The issuing authority of the document.
@property (nonatomic, readonly, copy) NSString * _Nullable issuingAuthority;
/// The details about the address.
@property (nonatomic, readonly, strong) AddressDetailedInfo * _Nullable addressDetailedInfo;
/// The driver license detailed info.
@property (nonatomic, readonly, strong) BarcodeDriverLicenseDetailedInfo * _Nullable driverLicenseDetailedInfo;
@end


/// The additional information on vehicle class.
SWIFT_CLASS("_TtC26DocumentVerificationClient23BarcodeVehicleClassInfo")
@interface BarcodeVehicleClassInfo : NSObject
/// The type of vehicle the driver license owner has privilege to drive.
@property (nonatomic, readonly, copy) NSString * _Nullable vehicleClass;
/// The type of driver licence.
@property (nonatomic, readonly, copy) NSString * _Nullable licenceType;
/// The date since licence is effective
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable effectiveDate;
/// The date of expiry of licence.
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable expiryDate;
@end

typedef SWIFT_ENUM(NSInteger, CardOrientation, open) {
  CardOrientationHorizontal = 0,
  CardOrientationVertical = 1,
};

typedef SWIFT_ENUM(NSInteger, CertaintyLevel, open) {
  CertaintyLevelNotPerformed = 0,
  CertaintyLevelHigh = 1,
  CertaintyLevelMedium = 2,
  CertaintyLevelLow = 3,
};


SWIFT_CLASS("_TtC26DocumentVerificationClient15CheckDigitCheck")
@interface CheckDigitCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable mrz;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

typedef SWIFT_ENUM(NSInteger, CheckResult, open) {
  CheckResultNotPerformed = 0,
  CheckResultPass = 1,
  CheckResultFail = 2,
};

enum Country : NSInteger;
enum Region : NSInteger;
enum DocumentType : NSInteger;

/// Document class information.
SWIFT_CLASS("_TtC26DocumentVerificationClient9ClassInfo")
@interface ClassInfo : NSObject
/// Document country.
/// See <code>Country</code> for all possible document countries.
@property (nonatomic, readonly) enum Country country;
/// Document region.
/// See <code>Region</code> for all possible document regions.
@property (nonatomic, readonly) enum Region region;
/// Document type.
/// See <code>DocumentType</code> for all possible document types.
@property (nonatomic, readonly) enum DocumentType type;
/// The name of the country that issued the scanned document.
@property (nonatomic, readonly, copy) NSString * _Nullable countryName;
/// The 3 letter ISO code of the country that issued the scanned document.
@property (nonatomic, readonly, copy) NSString * _Nullable isoAlpha3CountryCode;
/// The 2 letter ISO code of the country that issued the scanned document.
@property (nonatomic, readonly, copy) NSString * _Nullable isoAlpha2CountryCode;
/// The ISO numeric code of the country that issued the scanned document.
@property (nonatomic, readonly, copy) NSString * _Nullable isoNumericCountryCode;
@end

/// Document country.
typedef SWIFT_ENUM(NSInteger, Country, open) {
  CountryNone = 0,
  CountryAlbania = 1,
  CountryAlgeria = 2,
  CountryArgentina = 3,
  CountryAustralia = 4,
  CountryAustria = 5,
  CountryAzerbaijan = 6,
  CountryBahrain = 7,
  CountryBangladesh = 8,
  CountryBelgium = 9,
  CountryBosniaAndHerzegovina = 10,
  CountryBrunei = 11,
  CountryBulgaria = 12,
  CountryCambodia = 13,
  CountryCanada = 14,
  CountryChile = 15,
  CountryColombia = 16,
  CountryCostaRica = 17,
  CountryCroatia = 18,
  CountryCyprus = 19,
  CountryCzechia = 20,
  CountryDenmark = 21,
  CountryDominicanRepublic = 22,
  CountryEgypt = 23,
  CountryEstonia = 24,
  CountryFinland = 25,
  CountryFrance = 26,
  CountryGeorgia = 27,
  CountryGermany = 28,
  CountryGhana = 29,
  CountryGreece = 30,
  CountryGuatemala = 31,
  CountryHongKong = 32,
  CountryHungary = 33,
  CountryIndia = 34,
  CountryIndonesia = 35,
  CountryIreland = 36,
  CountryIsrael = 37,
  CountryItaly = 38,
  CountryJordan = 39,
  CountryKazakhstan = 40,
  CountryKenya = 41,
  CountryKosovo = 42,
  CountryKuwait = 43,
  CountryLatvia = 44,
  CountryLithuania = 45,
  CountryMalaysia = 46,
  CountryMaldives = 47,
  CountryMalta = 48,
  CountryMauritius = 49,
  CountryMexico = 50,
  CountryMorocco = 51,
  CountryNetherlands = 52,
  CountryNewZealand = 53,
  CountryNigeria = 54,
  CountryPakistan = 55,
  CountryPanama = 56,
  CountryParaguay = 57,
  CountryPhilippines = 58,
  CountryPoland = 59,
  CountryPortugal = 60,
  CountryPuertoRico = 61,
  CountryQatar = 62,
  CountryRomania = 63,
  CountryRussia = 64,
  CountrySaudiArabia = 65,
  CountrySerbia = 66,
  CountrySingapore = 67,
  CountrySlovakia = 68,
  CountrySlovenia = 69,
  CountrySouthAfrica = 70,
  CountrySpain = 71,
  CountrySweden = 72,
  CountrySwitzerland = 73,
  CountryTaiwan = 74,
  CountryThailand = 75,
  CountryTunisia = 76,
  CountryTurkey = 77,
  CountryUae = 78,
  CountryUganda = 79,
  CountryUk = 80,
  CountryUkraine = 81,
  CountryUsa = 82,
  CountryVietnam = 83,
  CountryBrazil = 84,
  CountryNorway = 85,
  CountryOman = 86,
  CountryEcuador = 87,
  CountryElSalvador = 88,
  CountrySriLanka = 89,
  CountryPeru = 90,
  CountryUruguay = 91,
  CountryBahamas = 92,
  CountryBermuda = 93,
  CountryBolivia = 94,
  CountryChina = 95,
  CountryEuropeanUnion = 96,
  CountryHaiti = 97,
  CountryHonduras = 98,
  CountryIceland = 99,
  CountryJapan = 100,
  CountryLuxembourg = 101,
  CountryMontenegro = 102,
  CountryNicaragua = 103,
  CountrySouthKorea = 104,
  CountryVenezuela = 105,
  CountryAfghanistan = 106,
  CountryAlandIslands = 107,
  CountryAmericanSamoa = 108,
  CountryAndorra = 109,
  CountryAngola = 110,
  CountryAnguilla = 111,
  CountryAntarctica = 112,
  CountryAntiguaAndBarbuda = 113,
  CountryArmenia = 114,
  CountryAruba = 115,
  CountryBailiwickOfGuernsey = 116,
  CountryBailiwickOfJersey = 117,
  CountryBarbados = 118,
  CountryBelarus = 119,
  CountryBelize = 120,
  CountryBenin = 121,
  CountryBhutan = 122,
  CountryBonaireSaintEustatiusAndSaba = 123,
  CountryBotswana = 124,
  CountryBouvetIsland = 125,
  CountryBritishIndianOceanTerritory = 126,
  CountryBurkinaFaso = 127,
  CountryBurundi = 128,
  CountryCameroon = 129,
  CountryCapeVerde = 130,
  CountryCaribbeanNetherlands = 131,
  CountryCaymanIslands = 132,
  CountryCentralAfricanRepublic = 133,
  CountryChad = 134,
  CountryChristmasIsland = 135,
  CountryCocosIslands = 136,
  CountryComoros = 137,
  CountryCongo = 138,
  CountryCookIslands = 139,
  CountryCuba = 140,
  CountryCuracao = 141,
  CountryDemocraticRepublicOfTheCongo = 142,
  CountryDjibouti = 143,
  CountryDominica = 144,
  CountryEastTimor = 145,
  CountryEquatorialGuinea = 146,
  CountryEritrea = 147,
  CountryEthiopia = 148,
  CountryFalklandIslands = 149,
  CountryFaroeIslands = 150,
  CountryFederatedStatesOfMicronesia = 151,
  CountryFiji = 152,
  CountryFrenchGuiana = 153,
  CountryFrenchPolynesia = 154,
  CountryFrenchSouthernTerritories = 155,
  CountryGabon = 156,
  CountryGambia = 157,
  CountryGibraltar = 158,
  CountryGreenland = 159,
  CountryGrenada = 160,
  CountryGuadeloupe = 161,
  CountryGuam = 162,
  CountryGuinea = 163,
  CountryGuineaBissau = 164,
  CountryGuyana = 165,
  CountryHeardIslandAndMcdonaldIslands = 166,
  CountryIran = 167,
  CountryIraq = 168,
  CountryIsleOfMan = 169,
  CountryIvoryCoast = 170,
  CountryJamaica = 171,
  CountryKiribati = 172,
  CountryKyrgyzstan = 173,
  CountryLaos = 174,
  CountryLebanon = 175,
  CountryLesotho = 176,
  CountryLiberia = 177,
  CountryLibya = 178,
  CountryLiechtenstein = 179,
  CountryMacau = 180,
  CountryMadagascar = 181,
  CountryMalawi = 182,
  CountryMali = 183,
  CountryMarshallIslands = 184,
  CountryMartinique = 185,
  CountryMauritania = 186,
  CountryMayotte = 187,
  CountryMoldova = 188,
  CountryMonaco = 189,
  CountryMongolia = 190,
  CountryMontserrat = 191,
  CountryMozambique = 192,
  CountryMyanmar = 193,
  CountryNamibia = 194,
  CountryNauru = 195,
  CountryNepal = 196,
  CountryNewCaledonia = 197,
  CountryNiger = 198,
  CountryNiue = 199,
  CountryNorfolkIsland = 200,
  CountryNorthernCyprus = 201,
  CountryNorthernMarianaIslands = 202,
  CountryNorthKorea = 203,
  CountryNorthMacedonia = 204,
  CountryPalau = 205,
  CountryPalestine = 206,
  CountryPapuaNewGuinea = 207,
  CountryPitcairn = 208,
  CountryReunion = 209,
  CountryRwanda = 210,
  CountrySaintBarthelemy = 211,
  CountrySaintHelenaAscensionAndTristianDaCunha = 212,
  CountrySaintKittsAndNevis = 213,
  CountrySaintLucia = 214,
  CountrySaintMartin = 215,
  CountrySaintPierreAndMiquelon = 216,
  CountrySaintVincentAndTheGrenadines = 217,
  CountrySamoa = 218,
  CountrySanMarino = 219,
  CountrySaoTomeAndPrincipe = 220,
  CountrySenegal = 221,
  CountrySeychelles = 222,
  CountrySierraLeone = 223,
  CountrySintMaarten = 224,
  CountrySolomonIslands = 225,
  CountrySomalia = 226,
  CountrySouthGeorgiaAndTheSouthSandwichIslands = 227,
  CountrySouthSudan = 228,
  CountrySudan = 229,
  CountrySuriname = 230,
  CountrySvalbardAndJanMayen = 231,
  CountryEswatini = 232,
  CountrySyria = 233,
  CountryTajikistan = 234,
  CountryTanzania = 235,
  CountryTogo = 236,
  CountryTokelau = 237,
  CountryTonga = 238,
  CountryTrinidadAndTobago = 239,
  CountryTurkmenistan = 240,
  CountryTurksAndCaicosIslands = 241,
  CountryTuvalu = 242,
  CountryUnitedStatesMinorOutlyingIslands = 243,
  CountryUzbekistan = 244,
  CountryVanuatu = 245,
  CountryVaticanCity = 246,
  CountryVirginIslandsBritish = 247,
  CountryVirginIslandsUs = 248,
  CountryWallisAndFutuna = 249,
  CountryWesternSahara = 250,
  CountryYemen = 251,
  CountryYugoslavia = 252,
  CountryZambia = 253,
  CountryZimbabwe = 254,
};

@class MatchCheck;
@class LogicCheck;
@class FormatCheck;

SWIFT_CLASS("_TtC26DocumentVerificationClient9DataCheck")
@interface DataCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable overall;
@property (nonatomic, readonly, strong) MatchCheck * _Nullable matchCheck;
@property (nonatomic, readonly, strong) LogicCheck * _Nullable logicCheck;
@property (nonatomic, readonly, strong) FormatCheck * _Nullable formatCheck;
@property (nonatomic, readonly, strong) BarcodeAnomalyCheck * _Nullable barcodeAnomalyCheck;
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable sampleStringCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

enum DataMatchState : NSInteger;

/// Result of data match check.
SWIFT_CLASS("_TtC26DocumentVerificationClient15DataMatchResult")
@interface DataMatchResult : NSObject
/// The result of data match on date of birth field.
@property (nonatomic, readonly) enum DataMatchState dateOfBirth;
/// The result of data match on date of expiry field.
@property (nonatomic, readonly) enum DataMatchState dateOfExpiry;
/// The result of data match on document number field.
@property (nonatomic, readonly) enum DataMatchState documentNumber;
/// The result of data match on document additional number field.
@property (nonatomic, readonly) enum DataMatchState documentAdditionalNumber;
/// The result of data match on document optional additional number field.
@property (nonatomic, readonly) enum DataMatchState documentOptionalAdditionalNumber;
/// The result of data match on personal ID number field.
@property (nonatomic, readonly) enum DataMatchState personalIdNumber;
/// The result of data match on the whole document.
@property (nonatomic, readonly) enum DataMatchState dataMatchResult;
@end

/// We currently check document number, date of expiry, date of birth and date of issue fields.
typedef SWIFT_ENUM(NSInteger, DataMatchState, open) {
  DataMatchStateNotPerformed = 0,
  DataMatchStateFailed = 1,
  DataMatchStateSuccess = 2,
};


SWIFT_CLASS("_TtC26DocumentVerificationClient14DateLogicCheck")
@interface DateLogicCheck : NSObject
@property (nonatomic, readonly) enum CheckResult overall;
@property (nonatomic, readonly) enum CheckResult dateOfBirthBeforeDateOfIssueCheck;
@property (nonatomic, readonly) enum CheckResult dateOfBirthBeforeDateOfExpiryCheck;
@property (nonatomic, readonly) enum CheckResult dateOfIssueBeforeDateOfExpiryCheck;
@property (nonatomic, readonly) enum CheckResult dateOfBirthInPastCheck;
@property (nonatomic, readonly) enum CheckResult dateOfIssueInPastCheck;
@property (nonatomic, readonly) enum CheckResult dateOfExpiryInFutureCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;
@class StringResult;

SWIFT_CLASS("_TtC26DocumentVerificationClient10DateResult")
@interface DateResult : NSObject
/// Day in month.
@property (nonatomic, readonly) NSInteger day;
/// Month in year.
@property (nonatomic, readonly) NSInteger month;
/// Year.
@property (nonatomic, readonly) NSInteger year;
/// Date object from <code>originalString</code>.
@property (nonatomic, readonly, copy) NSDate * _Nullable date;
/// String used in date parsing.
@property (nonatomic, readonly, strong) StringResult * _Nullable originalString;
/// True if date was successfully parsed.
@property (nonatomic, readonly) BOOL successfullyParsed;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient16DateResultSimple")
@interface DateResultSimple : NSObject
/// Day in month.
@property (nonatomic, readonly) NSInteger day;
/// Month in year.
@property (nonatomic, readonly) NSInteger month;
/// Year.
@property (nonatomic, readonly) NSInteger year;
/// Date object from <code>originalString</code>.
@property (nonatomic, readonly, copy) NSDate * _Nullable date;
/// String used in date parsing.
@property (nonatomic, readonly, copy) NSString * _Nullable originalString;
/// True if date was successfully parsed.
@property (nonatomic, readonly) BOOL successfullyParsed;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient13DetailedCheck")
@interface DetailedCheck : NSObject
@property (nonatomic, readonly) enum CheckResult result;
@property (nonatomic, readonly) enum CertaintyLevel certaintyLevel;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// The color status determined from scanned image.
typedef SWIFT_ENUM(NSInteger, DocumentImageColorStatus, open) {
  DocumentImageColorStatusNotAvailable = 0,
  DocumentImageColorStatusBlackAndWhite = 1,
  DocumentImageColorStatusColor = 2,
};

@class TieredCheck;

SWIFT_CLASS("_TtC26DocumentVerificationClient21DocumentLivenessCheck")
@interface DocumentLivenessCheck : NSObject
@property (nonatomic, readonly) enum CheckResult overall;
@property (nonatomic, readonly, strong) TieredCheck * _Nullable screenCheck;
@property (nonatomic, readonly, strong) TieredCheck * _Nullable photocopyCheck;
@property (nonatomic, readonly) enum CheckResult handPresenceCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

/// Document type.
typedef SWIFT_ENUM(NSInteger, DocumentType, open) {
  DocumentTypeNone = 0,
  DocumentTypeConsularId = 1,
  DocumentTypeDl = 2,
  DocumentTypeDlPublicServicesCard = 3,
  DocumentTypeEmploymentPass = 4,
  DocumentTypeFinCard = 5,
  DocumentTypeId = 6,
  DocumentTypeMultipurposeId = 7,
  DocumentTypeMyKad = 8,
  DocumentTypeMyKid = 9,
  DocumentTypeMyPR = 10,
  DocumentTypeMyTentera = 11,
  DocumentTypePanCard = 12,
  DocumentTypeProfessionalId = 13,
  DocumentTypePublicServicesCard = 14,
  DocumentTypeResidencePermit = 15,
  DocumentTypeResidentId = 16,
  DocumentTypeTemporaryResidencePermit = 17,
  DocumentTypeVoterId = 18,
  DocumentTypeWorkPermit = 19,
  DocumentTypeIKad = 20,
  DocumentTypeMilitaryId = 21,
  DocumentTypeMyKas = 22,
  DocumentTypeSocialSecurityCard = 23,
  DocumentTypeHealthInsuranceCard = 24,
  DocumentTypePassport = 25,
  DocumentTypeSPass = 26,
  DocumentTypeAddressCard = 27,
  DocumentTypeAlienId = 28,
  DocumentTypeAlienPassport = 29,
  DocumentTypeGreenCard = 30,
  DocumentTypeMinorsId = 31,
  DocumentTypePostalId = 32,
  DocumentTypeProfessionalDl = 33,
  DocumentTypeTaxId = 34,
  DocumentTypeWeaponPermit = 35,
  DocumentTypeVisa = 36,
  DocumentTypeBorderCrossingCard = 37,
  DocumentTypeDriverCard = 38,
  DocumentTypeGlobalEntryCard = 39,
  DocumentTypeMypolis = 40,
  DocumentTypeNexusCard = 41,
  DocumentTypePassportCard = 42,
  DocumentTypeProofOfAgeCard = 43,
  DocumentTypeRefugeeId = 44,
  DocumentTypeTribalId = 45,
  DocumentTypeVeteranId = 46,
  DocumentTypeCitizenshipCertificate = 47,
  DocumentTypeMyNumberCard = 48,
  DocumentTypeConsularPassport = 49,
  DocumentTypeMinorsPassport = 50,
  DocumentTypeMinorsPublicServicesCard = 51,
};


SWIFT_CLASS("_TtC26DocumentVerificationClient21DocumentValidityCheck")
@interface DocumentValidityCheck : NSObject
@property (nonatomic, readonly) enum CheckResult expiredCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DocumentVerificationResult;

/// Class representing the result of the document verificaton.
/// See <code>VerificationResult</code> for more details.
SWIFT_CLASS("_TtC26DocumentVerificationClient36DocumentVerificationEndpointResponse")
@interface DocumentVerificationEndpointResponse : NSObject
/// Provided identifier for logback
@property (nonatomic, readonly, copy) NSString * _Nullable traceId;
/// The result containing every data check result for the verified document.
@property (nonatomic, readonly, strong) DocumentVerificationResult * _Nullable data;
/// UTC time when verification started
@property (nonatomic, readonly, copy) NSString * _Nonnull startTime;
/// UTC time when verification finished
@property (nonatomic, readonly, copy) NSString * _Nonnull finishTime;
/// Unique execution identifier of the verification request for logback
@property (nonatomic, readonly, copy) NSString * _Nonnull executionId;
@end

@class ImageSource;
enum MatchLevel : NSInteger;

/// Class respresenting DocumentVerificationRequest to be verified.
SWIFT_CLASS("_TtC26DocumentVerificationClient27DocumentVerificationRequest")
@interface DocumentVerificationRequest : NSObject
/// Url or base64 string of the image. The Base64 image takes precedence if url and base64 are defined.
/// See <code>ImageSource</code> for the details.
@property (nonatomic, strong) ImageSource * _Nonnull imageFront;
/// Url or base64 string of the image. The Base64 image takes precedence if url and base64 are defined.
/// See <code>ImageSource</code> for the details.
@property (nonatomic, strong) ImageSource * _Nullable imageBack;
/// Defines whether full document image should be extracted.
@property (nonatomic) BOOL returnFullDocumentImage;
/// Defines whether face image should be extracted.
@property (nonatomic) BOOL returnFaceImage;
/// Defines whether signature image should be extracted.
@property (nonatomic) BOOL returnSignatureImage;
/// Defines screen match level.
@property (nonatomic) enum MatchLevel screenMatchLevel;
/// Defines photocopy match level.
@property (nonatomic) enum MatchLevel photocopyMatchLevel;
/// Defines custom pattern for logback.
@property (nonatomic, copy) NSString * _Nullable traceId;
/// Initializes a new DocumentVerificationRequest with provided document images.
/// \param frontImage The front image of the document.
///
/// \param backImage The back image of the document.
///
///
/// returns:
/// A new DocumentVerificationRequest.
- (nonnull instancetype)initWithImageFront:(ImageSource * _Nonnull)imageFront imageBack:(ImageSource * _Nullable)imageBack OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OverallFraudCheck;
@class ImageQualityCheck;
@class VisualCheck;
@class ExtractionResult;
enum ResultState : NSInteger;

/// Class representing the result of the verification process.
SWIFT_CLASS("_TtC26DocumentVerificationClient26DocumentVerificationResult")
@interface DocumentVerificationResult : NSObject
/// Document overall fraud check result.
@property (nonatomic, readonly, strong) OverallFraudCheck * _Nullable overallFraudCheck;
/// Result of all the data checks on the document.
/// See <code>DetailedCheck</code>, <code>MatchCheck</code>, <code>LogicCheck</code> and <code>FormatCheck</code> for the details.
@property (nonatomic, readonly, strong) DataCheck * _Nullable dataCheck;
/// Document liveness check result.
@property (nonatomic, readonly, strong) DocumentLivenessCheck * _Nullable documentLivenessCheck;
/// Document validity check result.
@property (nonatomic, readonly, strong) DocumentValidityCheck * _Nullable documentValidityCheck;
/// Document image quality check result.
@property (nonatomic, readonly, strong) ImageQualityCheck * _Nullable imageQualityCheck;
/// Document visual check result.
@property (nonatomic, readonly, strong) VisualCheck * _Nullable visualCheck;
/// Document extraction result.
@property (nonatomic, readonly, strong) ExtractionResult * _Nullable extractionResult;
/// Possible states of the result.
@property (nonatomic, readonly) enum ResultState recognitionStatus;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class DocumentVerificationServiceSettings;

/// Document verification service.
/// See <code>verify</code> method for the document verification process.
SWIFT_CLASS("_TtC26DocumentVerificationClient27DocumentVerificationService")
@interface DocumentVerificationService : NSObject
- (nonnull instancetype)initWithSettings:(DocumentVerificationServiceSettings * _Nonnull)settings OBJC_DESIGNATED_INITIALIZER;
/// Verify the document.
/// \code
/// - Parameters:
///    - documentVerificationRequest: Document Verification Request to be processed.
///
/// - Returns:
///    - A ``DocumentVerificationResult``
///    
/// - Throws:
///    - A ``RequestError``
///
/// \endcode
- (void)verifyWithDocumentVerificationRequest:(DocumentVerificationRequest * _Nonnull)documentVerificationRequest completionHandler:(void (^ _Nonnull)(DocumentVerificationEndpointResponse * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Settings for <code>DocumentVerificationService</code>
SWIFT_CLASS("_TtC26DocumentVerificationClient35DocumentVerificationServiceSettings")
@interface DocumentVerificationServiceSettings : NSObject
- (nonnull instancetype)initWithVerificationServiceBaseUrl:(NSString * _Nonnull)verificationServiceBaseUrl accessClientId:(NSString * _Nonnull)accessClientId accessClientSecret:(NSString * _Nonnull)accessClientSecret OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class VehicleClassInfo;

/// The driver license detailed info.
SWIFT_CLASS("_TtC26DocumentVerificationClient25DriverLicenseDetailedInfo")
@interface DriverLicenseDetailedInfo : NSObject
/// The restrictions to driving privileges for the United States driver license owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable restrictions;
/// The additional privileges granted to the United States driver license owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable endorsements;
/// The type of vehicle the driver license owner has privilege to drive.
@property (nonatomic, readonly, strong) StringResult * _Nullable vehicleClass;
/// The driver license conditions.
@property (nonatomic, readonly, strong) StringResult * _Nullable conditions;
/// The additional information on vehicle class.
@property (nonatomic, readonly, copy) NSArray<VehicleClassInfo *> * _Nullable vehicleClassesInfo;
@end

@class MrzResult;
@class VizResult;
@class ImageAnalysisResult;
enum ProcessingStatus : NSInteger;
enum RecognitionMode : NSInteger;

/// Defines extracted data from the document.
SWIFT_CLASS("_TtC26DocumentVerificationClient16ExtractionResult")
@interface ExtractionResult : NSObject
/// The first name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable firstName;
/// The last name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable lastName;
/// The last name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable fullName;
/// The address of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable address;
@property (nonatomic, readonly, strong) DateResult * _Nullable dateOfBirth;
@property (nonatomic, readonly, strong) DateResult * _Nullable dateOfIssue;
@property (nonatomic, readonly, strong) DateResult * _Nullable dateOfExpiry;
/// The document number.
@property (nonatomic, readonly, strong) StringResult * _Nullable documentNumber;
/// The sex of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable sex;
/// The driver license detailed info.
@property (nonatomic, readonly, strong) DriverLicenseDetailedInfo * _Nullable driverLicenseDetailedInfo;
/// The additional name information of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalNameInformation;
/// The additional address information of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalAddressInformation;
/// The one more additional address information of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalOptionalAddressInformation;
/// The place of birth of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable placeOfBirth;
/// The nationality of the documet owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable nationality;
/// The race of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable race;
/// The religion of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable religion;
/// The profession of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable profession;
/// The marital status of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable maritalStatus;
/// The residential stauts of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable residentialStatus;
/// The employer of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable employer;
/// The personal identification number.
@property (nonatomic, readonly, strong) StringResult * _Nullable personalIdNumber;
/// The additional number of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable documentAdditionalNumber;
/// The one more additional number of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable documentOptionalAdditionalNumber;
/// The issuing authority of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable issuingAuthority;
/// The data extracted from the machine readable zone.
@property (nonatomic, readonly, strong) MrzResult * _Nullable mrzData;
/// The localized name of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable localizedName;
/// We currently check document number, date of expiry, date of birth and date of issue fields.
@property (nonatomic, readonly, strong) DataMatchResult * _Nullable dataMatchResult;
/// The additional personal identification number.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalPersonalIdNumber;
/// The data extracted from the visual inspection zone.
@property (nonatomic, readonly, strong) VizResult * _Nullable frontViz;
/// The data extracted from the visual inspection zone.
@property (nonatomic, readonly, strong) VizResult * _Nullable backViz;
/// Various information obtained by analysing the scanned image.
@property (nonatomic, readonly, strong) ImageAnalysisResult * _Nullable frontImageAnalysisResult;
/// Various information obtained by analysing the scanned image.
@property (nonatomic, readonly, strong) ImageAnalysisResult * _Nullable backImageAnalysisResult;
/// The document class information.
@property (nonatomic, readonly, strong) ClassInfo * _Nullable classInfo;
/// The data extracted from the barcode.
@property (nonatomic, readonly, strong) BarcodeResult * _Nullable barcode;
/// The fathers name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable fathersName;
/// The mothers name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable mothersName;
/// Possible states of the Recognizer’s result.
@property (nonatomic, readonly) enum ResultState recognitionStatus;
/// Determines if date of expiry is permanent.
@property (nonatomic, readonly) BOOL dateOfExpiryPermanent;
/// Defines whether recognizer has finished scanning first side.
@property (nonatomic, readonly) BOOL scanningFirstSideDone;
/// The full document front image.
@property (nonatomic, readonly, strong) UIImage * _Nullable fullDocumentFrontImage;
/// The full document front image.
@property (nonatomic, readonly, strong) UIImage * _Nullable fullDocumentBackImage;
/// The face image.
@property (nonatomic, readonly, strong) UIImage * _Nullable faceImage;
/// The signature image.
@property (nonatomic, readonly, strong) UIImage * _Nullable signatureImage;
/// Detailed information about the recognition process.
@property (nonatomic, readonly) enum ProcessingStatus processingStatus;
/// Detailed information about the recognition process.
@property (nonatomic, readonly) enum ProcessingStatus frontProcessingStatus;
/// Detailed information about the recognition process.
@property (nonatomic, readonly) enum ProcessingStatus backProcessingStatus;
/// Recognition mode used to scan current document.
@property (nonatomic, readonly) enum RecognitionMode recognitionMode;
/// The indicator if document owner is below age limit provided in the request.
@property (nonatomic, readonly) BOOL belowAgeLimit;
/// The calculated age of the document owner.
@property (nonatomic, readonly) NSInteger age;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient10FieldCheck")
@interface FieldCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable check;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class ValueFormatCheck;

SWIFT_CLASS("_TtC26DocumentVerificationClient11FormatCheck")
@interface FormatCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable overall;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable dateOfBirthCheck;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable dateOfExpiryCheck;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable dateOfIssueCheck;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable documentNumberCheck;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable genderCheck;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable nationalityCheck;
@property (nonatomic, readonly, strong) ValueFormatCheck * _Nullable issuingAuthorityCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

/// Detection status determined from the scanned image.
typedef SWIFT_ENUM(NSInteger, ImageAnalysisDetectionStatus, open) {
  ImageAnalysisDetectionStatusNotAvailable = 0,
  ImageAnalysisDetectionStatusNotDetected = 1,
  ImageAnalysisDetectionStatusDetected = 2,
};


/// Various information obtained by analysing the scanned image.
SWIFT_CLASS("_TtC26DocumentVerificationClient19ImageAnalysisResult")
@interface ImageAnalysisResult : NSObject
/// Whether the image is blurred.
@property (nonatomic, readonly) BOOL blurred;
/// The color status determined from scanned image.
@property (nonatomic, readonly) enum DocumentImageColorStatus documentImageColorStatus;
/// Detection status determined from the scanned image.
@property (nonatomic, readonly) enum ImageAnalysisDetectionStatus documentImageMoireStatus;
/// Detection status determined from the scanned image.
@property (nonatomic, readonly) enum ImageAnalysisDetectionStatus faceDetectionStatus;
/// Detection status determined from the scanned image.
@property (nonatomic, readonly) enum ImageAnalysisDetectionStatus mrzDetectionStatus;
/// Detection status determined from the scanned image.
@property (nonatomic, readonly) enum ImageAnalysisDetectionStatus barcodeDetectionStatus;
/// Orientation determined from the scanned image.
@property (nonatomic, readonly) enum CardOrientation cardOrientation;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient17ImageQualityCheck")
@interface ImageQualityCheck : NSObject
@property (nonatomic, readonly) enum CheckResult blurCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Class representing document image.
SWIFT_CLASS("_TtC26DocumentVerificationClient11ImageSource")
@interface ImageSource : NSObject
/// Url string of the image.
/// Can be nil if you have <code>image</code>.
@property (nonatomic, copy) NSString * _Nullable imageUrl;
/// UIImage representation of image.
/// Send underlying JPEG.
/// Can be nil if you have <code>imageUrl</code>
@property (nonatomic, strong) UIImage * _Nullable image;
/// Initializes a new Image Source.
/// \param imageUrl The URL string of the image.
///
/// \param image Image to be processed.
///
///
/// returns:
/// A new Image Source.
- (nonnull instancetype)initWithImageUrl:(NSString * _Nullable)imageUrl image:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient10LogicCheck")
@interface LogicCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable overall;
@property (nonatomic, readonly, strong) DateLogicCheck * _Nullable dateLogicCheck;
@property (nonatomic, readonly, strong) CheckDigitCheck * _Nullable checkDigitCheck;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient10MatchCheck")
@interface MatchCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable overall;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable firstNameMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable lastNameMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable fullNameMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable additionalNameInformationMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable localizedNameMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable fathersNameMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable mothersNameMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable addressMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable additionalAddressInformationMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable additionalOptionalAddressInformationMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable placeOfBirthMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable nationalityMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable sexMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable dateOfBirthMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable dateOfIssueMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable dateOfExpiryMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable documentNumberMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable personalIdNumberMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable documentAdditionalNumberMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable documentOptionalAdditionalNumberMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable additionalPersonalIdNumberMatch;
@property (nonatomic, readonly, strong) FieldCheck * _Nullable issuingAuthorityMatch;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

typedef SWIFT_ENUM(NSInteger, MatchLevel, open) {
  MatchLevelLevelDisabled = 0,
  MatchLevelLevel0 = 1,
  MatchLevelLevel1 = 2,
  MatchLevelLevel2 = 3,
  MatchLevelLevel3 = 4,
  MatchLevelLevel4 = 5,
  MatchLevelLevel5 = 6,
  MatchLevelLevel6 = 7,
  MatchLevelLevel7 = 8,
  MatchLevelLevel8 = 9,
  MatchLevelLevel9 = 10,
  MatchLevelLevel10 = 11,
};

/// Possible types of Machine Readable Travel Documents (MRTDs).
typedef SWIFT_ENUM(NSInteger, MrtdDocumentType, open) {
  MrtdDocumentTypeUnknown = 0,
  MrtdDocumentTypeIdentityCard = 1,
  MrtdDocumentTypePassport = 2,
  MrtdDocumentTypeVisa = 3,
  MrtdDocumentTypeGreenCard = 4,
  MrtdDocumentTypeMalaysianPassIMM13P = 5,
  MrtdDocumentTypeDriverLicense = 6,
  MrtdDocumentTypeInternationalTravelDocument = 7,
  MrtdDocumentTypeBorderCrossingCard = 8,
};


/// The data extracted from the machine readable zone.
SWIFT_CLASS("_TtC26DocumentVerificationClient9MrzResult")
@interface MrzResult : NSObject
/// The entire Machine Readable Zone text from ID. This string is usually used for parsing other elements.
/// NOTE: This string is available only if OCR result was parsed successfully.
@property (nonatomic, readonly, copy) NSString * _Nullable rawMrzString;
/// The document code. Document code contains two characters. For MRTD the first character shall be A, C or I. The second character shall be discretion of the issuing State or organization except that V shall not be used, and C shall not be used after A except in the crew member certificate.
/// On machine-readable passports (MRP) first character shall be P to designate an MRP. One additional letter may be used, at the discretion of the issuing State or organization, to designate a particular MRP.
/// If the second character position is not used for this purpose, it shall be filled by the filter character <code><</code>.
@property (nonatomic, readonly, copy) NSString * _Nullable documentCode;
/// Three-letter or two-letter code which indicate the issuing State. Three-letter codes are based on Aplha-3 codes for entities specified in ISO 3166-1, with extensions for certain States.
/// Two-letter codes are based on Aplha-2 codes for entities specified in ISO 3166-1, with extensions for certain States.
@property (nonatomic, readonly, copy) NSString * _Nullable issuer;
/// The document number. Document number contains up to 9 characters. Element does not exist on US Green Card.
/// To see which document was scanned use <code>documentType</code> property.
@property (nonatomic, readonly, copy) NSString * _Nullable documentNumber;
/// The first optional data. Contains empty string if not available. Element does not exist on US Green Card.
/// To see which document was scanned use the <code>documentType</code> property.
@property (nonatomic, readonly, copy) NSString * _Nullable opt1;
/// The second optional data. Contains empty string if not available. Element does not exist on Passports and Visas.
/// To see which document was scanned use the <code>documentType</code> property.
@property (nonatomic, readonly, copy) NSString * _Nullable opt2;
/// The gender of the card holder. Gender is specified by use of the single initial, capital letter F for female, M for male or <code><</code> for unspecified.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// The primary indentifier. If there is more than one component, they are separated with space.
@property (nonatomic, readonly, copy) NSString * _Nullable primaryId;
/// The secondary identifier. If there is more than one component, they are separated with space.
@property (nonatomic, readonly, copy) NSString * _Nullable secondaryId;
/// The alien number. Contains empty string if not available. Exists only on US Green Cards. To see which document was scanned use the <code>documentType</code> property.
@property (nonatomic, readonly, copy) NSString * _Nullable alienNumber;
/// The application receipt number. Contains empty string if not available. Exists only on US Green Cards.
/// To see which document was scanned use the <code>documentType</code> property.
@property (nonatomic, readonly, copy) NSString * _Nullable applicationReceiptNumber;
/// The immigrant case number. Contains empty string if not available. Exists only on US Green Cards.
/// To see which document was scanned use the <code>documentType</code> property.
@property (nonatomic, readonly, copy) NSString * _Nullable immigrantCaseNumber;
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable dateOfBirth;
@property (nonatomic, readonly, strong) DateResultSimple * _Nullable dateOfExpiry;
/// Returns full issuer name that is expanded from the three-letter or two-letter code which indicate the issuing State.
@property (nonatomic, readonly, copy) NSString * _Nullable issuerName;
/// Returns full nationality of the holder, which is expanded from the three-letter or two-letter nationality code.
@property (nonatomic, readonly, copy) NSString * _Nullable nationalityName;
/// True if all check digits inside MRZ are correct, false otherwise.
@property (nonatomic, readonly) BOOL mrzVerified;
/// True if Machine Readable Zone has been parsed, false otherwise.
@property (nonatomic, readonly) BOOL mrzParsed;
/// The type of MRTD Document.
@property (nonatomic, readonly) enum MrtdDocumentType documentType;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient17OverallFraudCheck")
@interface OverallFraudCheck : NSObject
@property (nonatomic, readonly) NSInteger performedChecks;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

/// Detailed information about the recognition process.
typedef SWIFT_ENUM(NSInteger, ProcessingStatus, open) {
  ProcessingStatusSuccess = 0,
  ProcessingStatusDetectionFailed = 1,
  ProcessingStatusImagePreprocessingFailed = 2,
  ProcessingStatusStabilityTestFailed = 3,
  ProcessingStatusScanningWrongSide = 4,
  ProcessingStatusFieldIdentificationFailed = 5,
  ProcessingStatusMandatoryFieldMissing = 6,
  ProcessingStatusInvalidCharactersFound = 7,
  ProcessingStatusImageReturnFailed = 8,
  ProcessingStatusBarcodeRecognitionFailed = 9,
  ProcessingStatusMrzParsingFailed = 10,
  ProcessingStatusClassFiltered = 11,
  ProcessingStatusUnsupportedClass = 12,
  ProcessingStatusUnsupportedByLicense = 13,
  ProcessingStatusAwaitingOtherSide = 14,
  ProcessingStatusNotScanned = 15,
};

/// Recognition mode used to scan current document.
typedef SWIFT_ENUM(NSInteger, RecognitionMode, open) {
  RecognitionModeNone = 0,
  RecognitionModeMrzId = 1,
  RecognitionModeMrzVisa = 2,
  RecognitionModeMrzPassport = 3,
  RecognitionModePhotoId = 4,
  RecognitionModeFullRecognition = 5,
  RecognitionModeBarcodeId = 6,
};

/// Document region.
typedef SWIFT_ENUM(NSInteger, Region, open) {
  RegionNone = 0,
  RegionAlabama = 1,
  RegionAlaska = 2,
  RegionAlberta = 3,
  RegionArizona = 4,
  RegionArkansas = 5,
  RegionAustralianCapitalTerritory = 6,
  RegionBritishColumbia = 7,
  RegionCalifornia = 8,
  RegionColorado = 9,
  RegionConnecticut = 10,
  RegionDelaware = 11,
  RegionDistrictOfColumbia = 12,
  RegionFlorida = 13,
  RegionGeorgia = 14,
  RegionHawaii = 15,
  RegionIdaho = 16,
  RegionIllinois = 17,
  RegionIndiana = 18,
  RegionIowa = 19,
  RegionKansas = 20,
  RegionKentucky = 21,
  RegionLouisiana = 22,
  RegionMaine = 23,
  RegionManitoba = 24,
  RegionMaryland = 25,
  RegionMassachusetts = 26,
  RegionMichigan = 27,
  RegionMinnesota = 28,
  RegionMississippi = 29,
  RegionMissouri = 30,
  RegionMontana = 31,
  RegionNebraska = 32,
  RegionNevada = 33,
  RegionNewBrunswick = 34,
  RegionNewHampshire = 35,
  RegionNewJersey = 36,
  RegionNewMexico = 37,
  RegionNewSouthWales = 38,
  RegionNewYork = 39,
  RegionNorthernTerritory = 40,
  RegionNorthCarolina = 41,
  RegionNorthDakota = 42,
  RegionNovaScotia = 43,
  RegionOhio = 44,
  RegionOklahoma = 45,
  RegionOntario = 46,
  RegionOregon = 47,
  RegionPennsylvania = 48,
  RegionQuebec = 49,
  RegionQueensland = 50,
  RegionRhodeIsland = 51,
  RegionSaskatchewan = 52,
  RegionSouthAustralia = 53,
  RegionSouthCarolina = 54,
  RegionSouthDakota = 55,
  RegionTasmania = 56,
  RegionTennessee = 57,
  RegionTexas = 58,
  RegionUtah = 59,
  RegionVermont = 60,
  RegionVictoria = 61,
  RegionVirginia = 62,
  RegionWashington = 63,
  RegionWesternAustralia = 64,
  RegionWestVirginia = 65,
  RegionWisconsin = 66,
  RegionWyoming = 67,
  RegionYukon = 68,
  RegionCiudadDeMexico = 69,
  RegionJalisco = 70,
  RegionNewfoundlandAndLabrador = 71,
  RegionNuevoLeon = 72,
  RegionBajaCalifornia = 73,
  RegionChihuahua = 74,
  RegionGuanajuato = 75,
  RegionGuerrero = 76,
  RegionMexico = 77,
  RegionMichoacan = 78,
  RegionNewYorkCity = 79,
  RegionTamaulipas = 80,
  RegionVeracruz = 81,
  RegionChiapas = 82,
  RegionCoahuila = 83,
  RegionDurango = 84,
  RegionGuerreroCocula = 85,
  RegionGuerreroJuchitan = 86,
  RegionGuerreroTepecoacuilco = 87,
  RegionGuerreroTlacoapa = 88,
  RegionGujarat = 89,
  RegionHidalgo = 90,
  RegionKarnataka = 91,
  RegionKerala = 92,
  RegionKhyberPakhtunkhwa = 93,
  RegionMadhyaPradesh = 94,
  RegionMaharashtra = 95,
  RegionMorelos = 96,
  RegionNayarit = 97,
  RegionOaxaca = 98,
  RegionPuebla = 99,
  RegionPunjab = 100,
  RegionQueretaro = 101,
  RegionSanLuisPotosi = 102,
  RegionSinaloa = 103,
  RegionSonora = 104,
  RegionTabasco = 105,
  RegionTamilNadu = 106,
  RegionYucatan = 107,
  RegionZacatecas = 108,
  RegionAguascalientes = 109,
  RegionBajaCaliforniaSur = 110,
  RegionCampeche = 111,
  RegionColima = 112,
  RegionQuintanaRooBenitoJuarez = 113,
  RegionQuintanaRoo = 114,
  RegionQuintanaRooSolidaridad = 115,
  RegionTlaxcala = 116,
  RegionQuintanaRooCozumel = 117,
  RegionSaoPaolo = 118,
};

typedef SWIFT_ENUM(NSInteger, RequestError, open) {
  RequestErrorUnauthorized = 0,
  RequestErrorServerError = 1,
  RequestErrorServerIncompatibility = 2,
  RequestErrorUnknownHost = 3,
  RequestErrorInvalidURL = 4,
  RequestErrorUnknown = 5,
};
static NSString * _Nonnull const RequestErrorDomain = @"DocumentVerificationClient.RequestError";

typedef SWIFT_ENUM(NSInteger, ResultState, open) {
  ResultStateEmpty = 0,
  ResultStateUncertain = 1,
  ResultStateValid = 2,
  ResultStateStageValid = 3,
};

enum SecurityFeaturesProcessingStatus : NSInteger;
@class SegmentResult;

/// Defines every security feature that is verified.
SWIFT_CLASS("_TtC26DocumentVerificationClient16SecurityFeatures")
@interface SecurityFeatures : NSObject
@property (nonatomic, readonly) enum SecurityFeaturesProcessingStatus processingStatus;
@property (nonatomic, readonly) float score;
@property (nonatomic, readonly, strong) UIImage * _Nullable fullDocumentImage;
@property (nonatomic, readonly, copy) NSArray<SegmentResult *> * _Nullable segmentResult;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

typedef SWIFT_ENUM(NSInteger, SecurityFeaturesProcessingStatus, open) {
  SecurityFeaturesProcessingStatusNotPerformed = 0,
  SecurityFeaturesProcessingStatusUnsupportedByLicense = 1,
  SecurityFeaturesProcessingStatusUnsupportedDocument = 2,
  SecurityFeaturesProcessingStatusPerformed = 3,
};


/// Defines each document segment that is verified.
SWIFT_CLASS("_TtC26DocumentVerificationClient13SegmentResult")
@interface SegmentResult : NSObject
@property (nonatomic, readonly) enum CheckResult checkResult;
@property (nonatomic, readonly) CGRect rectangle;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Defines returned parsed string depending on the document alphabet.
/// Supported alohabets: <code>latin</code>, <code>cyrillic</code> and <code>arabic</code>.
SWIFT_CLASS("_TtC26DocumentVerificationClient12StringResult")
@interface StringResult : NSObject
/// The result of recognition in latin.
@property (nonatomic, readonly, copy) NSString * _Nullable latin;
/// The result of recognition in cyrillic.
@property (nonatomic, readonly, copy) NSString * _Nullable cyrillic;
/// The result of recognition in arabic.
@property (nonatomic, readonly, copy) NSString * _Nullable arabic;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient11TieredCheck")
@interface TieredCheck : NSObject
@property (nonatomic, readonly) enum CheckResult result;
@property (nonatomic, readonly) enum MatchLevel matchLevel;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC26DocumentVerificationClient16ValueFormatCheck")
@interface ValueFormatCheck : NSObject
@property (nonatomic, readonly, strong) DetailedCheck * _Nullable check;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// The additional information on vehicle class.
SWIFT_CLASS("_TtC26DocumentVerificationClient16VehicleClassInfo")
@interface VehicleClassInfo : NSObject
/// The type of vehicle the driver license owner has privilege to drive.
@property (nonatomic, readonly, strong) StringResult * _Nullable vehicleClass;
/// The type of driver licence.
@property (nonatomic, readonly, strong) StringResult * _Nullable licenceType;
/// The date since licence is effective
@property (nonatomic, readonly, strong) DateResult * _Nullable effectiveDate;
/// The date of expiry of licence.
@property (nonatomic, readonly, strong) DateResult * _Nullable expiryDate;
@end


/// Defines all the visual checks that are vierified on the document.
SWIFT_CLASS("_TtC26DocumentVerificationClient11VisualCheck")
@interface VisualCheck : NSObject
@property (nonatomic, readonly) enum CheckResult overall;
@property (nonatomic, readonly) enum CheckResult photoForgeryCheck;
@property (nonatomic, readonly) enum CheckResult fontCheck;
@property (nonatomic, readonly) enum CheckResult backgroundCheck;
@property (nonatomic, readonly) enum CheckResult layoutCheck;
@property (nonatomic, readonly, strong) AnomalyCheck * _Nullable anomalyCheck;
@property (nonatomic, readonly, strong) SecurityFeatures * _Nullable securityFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC26DocumentVerificationClient9VizResult")
@interface VizResult : NSObject
/// The first name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable firstName;
/// The last name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable lastName;
/// The full name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable fullName;
/// The fathers name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable fathersName;
/// The mothers name of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable mothersName;
/// The additional name information of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalNameInformation;
/// The localized name of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable localizedName;
/// The address of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable address;
/// The additional address information of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalAddressInformation;
/// The one more additional address information of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalOptionalAddressInformation;
/// The place of birth of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable placeOfBirth;
/// The nationality of the documet owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable nationality;
/// The race of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable race;
/// The religion of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable religion;
/// The profession of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable profession;
/// The marital status of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable maritalStatus;
/// The residential stauts of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable residentialStatus;
/// The employer of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable employer;
/// The sex of the document owner.
@property (nonatomic, readonly, strong) StringResult * _Nullable sex;
@property (nonatomic, readonly, strong) DateResult * _Nullable dateOfBirth;
@property (nonatomic, readonly, strong) DateResult * _Nullable dateOfIssue;
@property (nonatomic, readonly, strong) DateResult * _Nullable dateOfExpiry;
/// The document number.
@property (nonatomic, readonly, strong) StringResult * _Nullable documentNumber;
/// The personal identification number.
@property (nonatomic, readonly, strong) StringResult * _Nullable personalIdNumber;
/// The additional number of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable documentAdditionalNumber;
/// The one more additional number of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable documentOptionalAdditionalNumber;
/// The additional personal identification number.
@property (nonatomic, readonly, strong) StringResult * _Nullable additionalPersonalIdNumber;
/// The issuing authority of the document.
@property (nonatomic, readonly, strong) StringResult * _Nullable issuingAuthority;
/// The driver license detailed info.
@property (nonatomic, readonly, strong) DriverLicenseDetailedInfo * _Nullable driverLicenseDetailedInfo;
/// Determines if date of expiry is permanent.
@property (nonatomic, readonly) BOOL dateOfExpiryPermanent;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
